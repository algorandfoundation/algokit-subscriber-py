name: Continuous Delivery of Python package

run-name: ${{ inputs.production_release && 'Production Release' || 'Beta Release' }}

on:
  push:
    branches:
      - main
    paths-ignore:
      - "docs/**"
  workflow_dispatch:
    inputs:
      production_release:
        description: "Production release?"
        type: boolean
        required: true
        default: true

concurrency: release

permissions:
  contents: write
  packages: read

jobs:
  release:
    name: Semantic Release
    runs-on: ubuntu-latest
    permissions:
      # IMPORTANT: mandatory for trusted publishing and GitHub releases
      id-token: write
      contents: write
      packages: read
    steps:
      - uses: actions/create-github-app-token@v1
        id: app-token
        with:
          app-id: ${{ secrets.BOT_ID }}
          private-key: ${{ secrets.BOT_SK }}

      - uses: actions/checkout@v4
        with:
          # Fetch entire repository history so we can determine version number from it
          fetch-depth: 0
          token: ${{ steps.app-token.outputs.token }}

      - name: Setup Python and algokit
        uses: ./.github/actions/setup-algokit-python

      - name: Run tests and quality checks (dummy for testing)
        run: |
          set -o pipefail
          poetry run pre-commit run --all-files && git diff --exit-code
          poetry run pytest

      - name: Get branch name
        shell: bash
        run: echo "branch=${GITHUB_REF#refs/heads/}" >> $GITHUB_OUTPUT
        id: get_branch

      - name: Python Semantic Release - Beta (non-prod)
        id: release-beta
        if: steps.get_branch.outputs.branch == 'main' && !inputs.production_release
        uses: python-semantic-release/python-semantic-release@v10.3.1
        with:
          github_token: ${{ steps.app-token.outputs.token }}
          prerelease: true

      - name: Python Semantic Release - Production
        id: release-prod
        if: steps.get_branch.outputs.branch == 'main' && inputs.production_release
        uses: python-semantic-release/python-semantic-release@v10.3.1
        with:
          github_token: ${{ steps.app-token.outputs.token }}

      - name: Publish to PyPI
        if: (steps.release-beta.outputs.released == 'true') || (steps.release-prod.outputs.released == 'true')
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          verbose: true


  publish-docs:
    name: Publish Docs
    needs: release
    # Don't publish docs for beta releases from main
    if: inputs.production_release
    uses: ./.github/workflows/gh-pages.yaml
    permissions:
      contents: read
      pages: write
      id-token: write